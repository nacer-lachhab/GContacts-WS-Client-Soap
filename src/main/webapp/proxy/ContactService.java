
package proxy;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ContactService", targetNamespace = "http://service.ws.soap_wsServer_Contact/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ContactService {


    /**
     * 
     * @param newContact
     * @return
     *     returns proxy.Contact
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "Create_Contact")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Create_Contact", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.CreateContact")
    @ResponseWrapper(localName = "Create_ContactResponse", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.CreateContactResponse")
    @Action(input = "http://service.ws.soap_wsServer_Contact/ContactService/Create_ContactRequest", output = "http://service.ws.soap_wsServer_Contact/ContactService/Create_ContactResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.ws.soap_wsServer_Contact/ContactService/Create_Contact/Fault/Exception")
    })
    public Contact createContact(
        @WebParam(name = "newContact", targetNamespace = "")
        Contact newContact)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<proxy.Contact>
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "List_Conctacts")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "List_Conctacts", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.ListConctacts")
    @ResponseWrapper(localName = "List_ConctactsResponse", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.ListConctactsResponse")
    @Action(input = "http://service.ws.soap_wsServer_Contact/ContactService/List_ConctactsRequest", output = "http://service.ws.soap_wsServer_Contact/ContactService/List_ConctactsResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.ws.soap_wsServer_Contact/ContactService/List_Conctacts/Fault/Exception")
    })
    public List<Contact> listConctacts()
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "Remove_Contact")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Remove_Contact", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.RemoveContact")
    @ResponseWrapper(localName = "Remove_ContactResponse", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.RemoveContactResponse")
    @Action(input = "http://service.ws.soap_wsServer_Contact/ContactService/Remove_ContactRequest", output = "http://service.ws.soap_wsServer_Contact/ContactService/Remove_ContactResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.ws.soap_wsServer_Contact/ContactService/Remove_Contact/Fault/Exception")
    })
    public String removeContact(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param newValues
     * @return
     *     returns proxy.Contact
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "Edite_Contact")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Edite_Contact", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.EditeContact")
    @ResponseWrapper(localName = "Edite_ContactResponse", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.EditeContactResponse")
    @Action(input = "http://service.ws.soap_wsServer_Contact/ContactService/Edite_ContactRequest", output = "http://service.ws.soap_wsServer_Contact/ContactService/Edite_ContactResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.ws.soap_wsServer_Contact/ContactService/Edite_Contact/Fault/Exception")
    })
    public Contact editeContact(
        @WebParam(name = "newValues", targetNamespace = "")
        Contact newValues)
        throws Exception_Exception
    ;

    /**
     * 
     * @param nameContact
     * @return
     *     returns java.util.List<proxy.Contact>
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "Search_Contact")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Search_Contact", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.SearchContact")
    @ResponseWrapper(localName = "Search_ContactResponse", targetNamespace = "http://service.ws.soap_wsServer_Contact/", className = "proxy.SearchContactResponse")
    @Action(input = "http://service.ws.soap_wsServer_Contact/ContactService/Search_ContactRequest", output = "http://service.ws.soap_wsServer_Contact/ContactService/Search_ContactResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://service.ws.soap_wsServer_Contact/ContactService/Search_Contact/Fault/Exception")
    })
    public List<Contact> searchContact(
        @WebParam(name = "nameContact", targetNamespace = "")
        String nameContact)
        throws Exception_Exception
    ;

}
